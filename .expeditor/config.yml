# Documentation available at https://expeditor.chef.io/docs/getting-started/

# Slack channel in Chef Software slack to send notifications about build failures, etc
slack:
  notify_channel: chef-ws-notify

github:
  # The file where the MAJOR.MINOR.PATCH version is kept. The version in this file
  # is bumped automatically via the `built_in:bump_version` merge_action.
  version_file: "VERSION"
  # The file where our CHANGELOG is kept. This file is updated automatically with
  # details from the Pull Request via the `built_in:update_changelog` merge_action.
  changelog_file: "CHANGELOG.md"
  # Delete the PR branch after successfully merged into release branch.
  delete_branch_on_merge: true

rubygems:
  - chef-apply

# These actions are taken, in order they are specified, anytime a Pull Request is merged.
merge_actions:
  - built_in:bump_version:
      ignore_labels:
        - "Version: Skip Bump"
        - "Expeditor: Skip Version Bump"
        - "Expeditor: Skip All"
  - bash:.expeditor/update_version.sh:
      only_if: built_in:bump_version
  - built_in:update_changelog:
      ignore_labels:
        - "Meta: Exclude From Changelog"
        - "Expeditor: Exclude From Changelog"
        - "Expeditor: Skip All"
  - built_in:build_gem:
      only_if:
        - built_in:bump_version
  - built_in:publish_rubygems:
      only_if:
        - built_in:build_gem

# While we're in beta and it takes a long series of steps to promote Chef Workstation
# (release chef-apply to rubygems, update ChefDK dependencies, perform a Chef Workstation
# build and then promote that) we want to minimize manual gates. So every successful
# PR merge will promote to Rubygems at this point.
# promote:
#   action:
#     - built_in:publish_rubygems
